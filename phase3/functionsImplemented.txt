Alphabet.java:
	Alphabet(): constructor
	printAll(): prints values
	getValues(): returns array of values
Derivative.java:
	Derivative(char a, ExpTree tree): constructor
	getDerivative(char c, ExpTree tree): computes deriv. given char and RE
	v2(ExpTree t): nullification
	v(ExpTree t): nullification
DFA.java:
	Delta:
		Delta(int c, char l, int n): constructor
	Trans:
		Trans(): constructor
		add(Delta item): add transition
	States:
		States(): constructor
		add(ExpTree item): add new item to tree
	DFA:
		DFA(): constructor
		createDFA(ExpTree regExp): fills tree iter.ing over alphabet		DFAState:
		DFAState:
			DFAState(ExpTree language): constructor
			initialize(): inits the DFAState
		Tuple:
			Tuple(char ch, DFAState t): constructor
ExpTree.java:
	ExpTree(String s): constructor
	ExpTree(Operation o): constructor
	isEqual(ExpTree otherTree): tree equality check
RandStrGen.java:
	RandStrGen(Alphabet A): constructor
	genString(int length): gen str of length from random chars in alphabet
	genStrings(int numStrings, int length): run genString numStrings times
REMatcher.java:
	REMatcher(ExpTree regExp): constructor
	isMatch(String s): matches the str against the RE => in lang or not
 
